

########################################
#### Макет установки Arch Linux ########
########################################


##################
## Тестирование ##
##################






clear
pacman -Syy
pacman -S pacman-contrib --noconfirm
clear
curl -L "https://archlinux.org/mirrorlist/?country=RU&protocol=https" -o /etc/pacman.d/mirrorlist.raw \
&& sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.raw \
&& rankmirrors -n 5 /etc/pacman.d/mirrorlist.raw > /etc/pacman.d/mirrorlist
pacman -Syy
clear
echo ""
echo ""
echo "##########################################
## <<< ИДЁТ ТЕСТИРОВАНИЕ КОМПЬЮТЕРА >>> ##
##########################################"; sleep 3
echo ""
echo ""
loadkeys ru
setfont cyr-sun16
sed -i "s/#\(en_US\.UTF-8\)/\1/" /etc/locale.gen
sed -i "s/#\(ru_RU\.UTF-8\)/\1/" /etc/locale.gen
locale-gen
sed -i s/'ParallelDownloads = 5'/'ParallelDownloads = 15'/g /etc/pacman.conf
sed -i s/'#Color'/'Color'/g /etc/pacman.conf
echo "[options]" >> /etc/pacman.conf
echo "ILoveCandy" >> /etc/pacman.conf
time_zone=$(curl -s https://ipinfo.io/timezone)
timedatectl set-timezone $time_zone
pacman -Syy
pacman -Sy archlinux-keyring inxi util-linux lshw --noconfirm
clear
echo ""
echo ""
date
echo ""
echo ""
sudo lshw -C cpu 2>/dev/null | grep 'vendor:' | uniq
echo ""
echo ""
sudo inxi -M
echo ""
echo ""
sudo inxi -I
echo ""
echo ""
lsblk -o PATH,PTTYPE,PARTTYPE,FSTYPE,PARTTYPENAME
echo ""
echo ""
echo "#################################################
## <<< ТЕСТИРОВАНИЕ КОМПЬЮТЕРА ЗАКОНЧИЛОСЬ >>> ##
#################################################"
echo ""
echo ""






################
## Переменные ##
################



#########################################################################
## Этот пункт предназначен для изменения переменных.                   ##
## Он обязателен.Иначе установка системы  может пойти с ошибками.      ## 
## Если параметры из раздела Тестирования не совпадают с параметрами   ##
## раздела Переменные, необходимо с помощью текстового редактора       ##
## провести групповое переименование переменных в таблице ниже,        ##
## чтобы они соответствовали результатам тестирования.                 ##
## По желанию можно изменить параметры пользователя, компьютера и ядра.##
#########################################################################



############################################
#  Объект           #   Переменная         #
############################################
#  Диски            #   sda sda1 sda2 sda3 #
############################################
#  Имя пользователя #   login	           #
############################################
#  Имя менедж.входа #  	User Name          #
############################################
#   Hostname 	    #   Sony               #
############################################
#   Microcode	    #   amd-ucode          #
############################################
#   Ядро	        #   linux-lts          #
############################################
#   размер SWAP	    #	sgdisk -n 2::-4G   #
############################################



Если система ставится на HDD, необходимо

изменить параметры btrfs c SSD :

ssd,noatime,space_cache=v2,compress=zstd:2,discard=async

на HDD :

noatime,space_cache=v2,compress=zstd:2,autodefrag







##############
## РАЗМЕТКА ##
##############





clear
echo ""
echo ""
echo "#############################
## <<< РАЗМЕТКА ДИСКОВ >>> ##
#############################"; sleep 3
echo ""
echo ""
clear
wipefs --all /dev/sda
sgdisk -Z /dev/sda
sgdisk -a 2048 -o /dev/sda
sgdisk -n 1::+1024M --typecode=1:ef00 --change-name=1:'Раздел Efi Arch Linux' /dev/sda
sgdisk -n 2::-4G --typecode=2:8300 --change-name=2:'Системный раздел Arch Linux' /dev/sda
sgdisk -n 3::-0 --typecode=3:8200 --change-name=3:'Раздел подкачки Arch Linux' /dev/sda
clear
gdisk -l /dev/sda
fdisk -l /dev/sda
echo ""
echo ""
echo "#######################################
## <<< РАЗМЕТКА ДИСКОВ ЗАВЕРШЕНА >>> ##
#######################################"
echo ""
echo ""







#############################################
## ФОРМАТИРОВАНИЕ, МОНТИРОВАНИЕ, УСТАНОВКА ##
## БАЗОВЫХ ПАКЕТОВ, ВХОД в СИСТЕМУ CHROOT  ##
#############################################





clear
echo ""
echo ""
echo "##################################################
## <<< ФОРМАТИРОВАНИЕ И МОНТИРОВАНИЕ ДИСКОВ >>> ##
##################################################"; sleep 3
echo ""
echo ""
mkfs.fat -F32 /dev/sda1
mkswap /dev/sda3
swapon /dev/sda3
mkfs.btrfs -f /dev/sda2
clear
mount /dev/sda2 /mnt
btrfs su cr /mnt/@
btrfs su cr /mnt/@home
btrfs su cr /mnt/@root
btrfs su cr /mnt/@srv
btrfs su cr /mnt/@cache
btrfs su cr /mnt/@log
btrfs su cr /mnt/@tmp
umount /mnt
clear
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@ /dev/sda2 /mnt
mkdir -p /mnt/{boot/efi,home,root,srv,/var/cache,/var/log,/var/tmp,var/lib/machines,var/lib/portables}
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@home /dev/sda2 /mnt/home
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@root /dev/sda2 /mnt/root
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@srv /dev/sda2 /mnt/srv
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@cache /dev/sda2 /mnt/var/cache
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@log /dev/sda2 /mnt/var/log
mount -o ssd,noatime,space_cache=v2,compress=zstd:2,discard=async,subvol=@tmp /dev/sda2 /mnt/var/tmp
mount /dev/sda1 /mnt/boot/efi
clear
lsblk -o PATH,PTTYPE,PARTTYPE,FSTYPE,PARTTYPENAME /dev/sda
lsblk /dev/sda
btrfs subvolume list /
echo ""
echo ""
echo "############################################################
## <<< ФОРМАТИРОВАНИЕ И МОНТИРОВАНИЕ ДИСКОВ ЗАВЕРШЕНО >>> ##
############################################################"
echo ""
echo ""







#######################################
## <<< УСТАНОВКА БАЗОВЫХ ПАКЕТОВ >>> ##
#######################################







clear
echo ""
echo ""
echo "#######################################
## <<< УСТАНОВКА БАЗОВЫХ ПАКЕТОВ >>> ##
#######################################"; sleep 3
echo ""
echo ""
pacstrap /mnt base base-devel btrfs-progs bash-completion archlinux-keyring nano amd-ucode efibootmgr memtest86+-efi reflector pacman-contrib
clear
mount -t proc proc /mnt/proc
mount -t sysfs sys /mnt/sys
mount -o bind /dev /mnt/dev
mount -t tmpfs tmpfs /mnt/run
genfstab -pU /mnt >> /mnt/etc/fstab
clear
echo ""
echo ""
echo "#################################################
## <<< УСТАНОВКА БАЗОВЫХ ПАКЕТОВ ЗАВЕРШЕНА >>> ##
#################################################"
echo ""
echo ""
arch-chroot /mnt /bin/bash
echo ""
echo ""




########################################################
################## CHROOT ##############################
########################################################



##############################################
## НАСТРОЙКИ PACMAN,FSTAB,ЯЗЫК,ЧАСОВОЙ ПОЯС ##
##############################################







clear
echo ""
echo ""
echo "####################################
## <<< ИДЁТ НАСТРОЙКА ЛОКАЛЕЙ >>> ##
####################################"; sleep 3
echo ""
echo ""
sed -i 's/\S*subvol=\(\S*\)/subvol=\1,ssd,noatime,space_cache=v2,compress=zstd:2,discard=async/g'  /etc/fstab
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
sed -i s/'ParallelDownloads = 5'/'ParallelDownloads = 15'/g /etc/pacman.conf
sed -i s/'#Color'/'Color'/g /etc/pacman.conf
echo "[options]" >> /etc/pacman.conf
echo "ILoveCandy" >> /etc/pacman.conf
echo "KEYMAP=ru" > /etc/vconsole.conf
echo "FONT=cyr-sun16" >> /etc/vconsole.conf
echo "LANG=ru_RU.UTF-8" > /etc/locale.conf
echo "LC_MESSAGES=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_TIME=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_NUMERIC=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_MONETARY=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_COLLATE=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_CTYPE=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_NAME=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_ADDRESS=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_TELEPHONE=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_MEASUREMENT=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_PAPER=ru_RU.UTF-8" >> /etc/locale.conf
echo "LC_IDENTIFICATION=ru_RU.UTF-8" >> /etc/locale.conf
sed -i "s/#\(en_US\.UTF-8\)/\1/" /etc/locale.gen
sed -i "s/#\(ru_RU\.UTF-8\)/\1/" /etc/locale.gen
locale-gen
export LANG=ru_RU.UTF-8
export LC_MESSAGES=ru_RU.UTF-8
export LC_TIME=ru_RU.UTF-8
export LC_NUMERIC=ru_RU.UTF-8
export LC_MONETARY=ru_RU.UTF-8
export LC_COLLATE=ru_RU.UTF-8
export LC_CTYPE=ru_RU.UTF-8
export LC_NAME=ru_RU.UTF-8
export LC_ADDRESS=ru_RU.UTF-8
export LC_TELEPHONE=ru_RU.UTF-8
export LC_MEASUREMENT=ru_RU.UTF-8
export LC_PAPER=ru_RU.UTF-8
export LC_IDENTIFICATION=ru_RU.UTF-8
clear
time_zone=$(curl -s https://ipinfo.io/timezone)
ln -sf /usr/share/zoneinfo/$time_zone /etc/localtime
hwclock --systohc
pacman -Syy
clear
echo ""
echo ""
echo ""
echo ""
echo "####################################
## <<< ИДЁТ ОБНОВЛЕНИЕ ЗЕРКАЛ >>> ##
####################################"; sleep 3
echo ""
echo ""
clear
pacman -Syy
clear
curl -L "https://archlinux.org/mirrorlist/?country=RU&protocol=https" -o /etc/pacman.d/mirrorlist.raw \
&& sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.raw \
&& rankmirrors -n 5 /etc/pacman.d/mirrorlist.raw > /etc/pacman.d/mirrorlist
systemctl enable reflector.timer
clear
pacman -Syy
clear
echo ""
echo ""
date
echo ""
echo ""
echo "############################################
## <<< ПЕРВОНАЧАЛЬНАЯ НАСТРОЙКА ЗАВЕРШЕНА ##
############################################"
echo ""
echo ""





####################
## НАСТРОЙКА NANO ##
####################






clear
echo ""
echo ""
echo "############################
## <<< НАСТРОЙКА NANO >>> ##
############################"; sleep 3
echo ""
echo ""
sed -i s/'# set indicator'/'set indicator'/g /etc/nanorc
sed -i s/'# set linenumbers'/'set linenumbers'/g /etc/nanorc
sed -i s/'# set titlecolor bold,white,blue'/'set titlecolor bold,white,blue'/g /etc/nanorc
sed -i s/'# set promptcolor lightwhite,grey'/'set promptcolor lightwhite,grey'/g /etc/nanorc
sed -i s/'# set statuscolor bold,white,green'/'set statuscolor bold,white,green'/g /etc/nanorc
sed -i s/'# set errorcolor bold,white,red'/'set errorcolor bold,white,red'/g /etc/nanorc
sed -i s/'# set spotlightcolor black,lightyellow'/'set spotlightcolor black,lightyellow'/g /etc/nanorc
sed -i s/'# set selectedcolor lightwhite,#804'/'set selectedcolor lightwhite,#804'/g /etc/nanorc
sed -i s/'# set stripecolor ,#444'/'set stripecolor ,#444'/g /etc/nanorc
sed -i s/'# set scrollercolor slate,#222'/'set scrollercolor slate,#222'/g /etc/nanorc
sed -i s/'# set numbercolor cyan'/'set numbercolor cyan'/g /etc/nanorc
sed -i s/'# set keycolor cyan'/'set keycolor cyan'/g /etc/nanorc
sed -i s/'# set functioncolor green'/'set functioncolor green'/g /etc/nanorc
sed -i s/'# set titlecolor bold,white,magenta'/'set titlecolor bold,white,magenta'/g /etc/nanorc
sed -i s/'# set promptcolor black,yellow'/'set promptcolor black,yellow'/g /etc/nanorc
sed -i s/'# set statuscolor bold,white,magenta'/'set statuscolor bold,white,magenta'/g /etc/nanorc
sed -i s/'# set errorcolor bold,white,red'/'set errorcolor bold,white,red'/g /etc/nanorc
sed -i s/'# set spotlightcolor black,orange'/'set spotlightcolor black,orange'/g /etc/nanorc
sed -i s/'# set selectedcolor lightwhite,cyan'/'set selectedcolor lightwhite,cyan'/g /etc/nanorc
sed -i s/'# set stripecolor ,yellow'/'set stripecolor ,yellow'/g /etc/nanorc
sed -i s/'# set scrollercolor magenta'/'set scrollercolor magenta'/g /etc/nanorc
sed -i s/'# set numbercolor magenta'/'set numbercolor magenta'/g /etc/nanorc
sed -i s/'# set keycolor lightmagenta'/'set keycolor lightmagenta'/g /etc/nanorc
sed -i s/'# set functioncolor magenta'/'set functioncolor magenta'/g /etc/nanorc
sed -i s/'\# include \/usr\/share\/nano\/\*\.nanorc'/'include \/usr\/share\/nano\/\*\.nanorc'/g /etc/nanorc
clear
echo ""
echo ""
echo "######################################
## <<< НАСТРОЙКА NANO ЗАВЕРШЕНА >>> ##
######################################"
echo ""
echo ""








########################
##  HOST, ПАРОЛЬ ROOT ##
########################





clear
echo ""
echo ""
echo "##################################
## <<<  ИДЁТ НАСТРОЙКА HOST >>> ##
##################################"; sleep 3
clear
echo "Sony" > /etc/hostname
echo "127.0.0.1   localhost" > /etc/hosts
echo ": :1        localhost" >> /etc/hosts
echo "127.0.1.1   Sony.localdomain   Sony" >> /etc/hosts
clear
echo ""
echo ""
echo "###################################
## <<<  СОЗДАЙТЕ ПАРОЛЬ ROOT >>> ##
###################################"
echo ""
echo ""
passwd
clear
echo ""
echo ""
echo "##############################################
## <<<  НАСТРОЙКА ROOT И HOST ЗАВЕРШЕНА >>> ##
##############################################"
echo ""
echo ""





###############################
## ПОЛЬЗОВАТЕЛЬ И ЕГО ПАРОЛЬ ##
###############################






clear
echo ""
echo ""
echo "##########################################
## <<<  ИДЁТ НАСТРОЙКА ПОЛЬЗОВАТЕЛЯ >>> ##
##########################################"; sleep 3
clear
useradd login -m -c "User Name" -s /bin/bash
usermod -aG wheel,users login
sed -i s/'# %wheel ALL=(ALL:ALL) ALL'/'%wheel ALL=(ALL:ALL) ALL'/g /etc/sudoers
clear
echo ""
echo ""
echo "###########################################
## <<<  СОЗДАЙТЕ ПАРОЛЬ ПОЛЬЗОВАТЕЛЯ >>> ##
###########################################"
echo ""
echo ""
passwd login
clear
echo ""
echo ""
echo "###############################################
## <<<  НАСТРОЙКА ПОЛЬЗОВАТЕЛЯ ЗАВЕРШЕНА >>> ##
###############################################"
echo ""
echo ""





#####################################
### УСТ.ЯДРА, GRUB и MKINITCPIO.#####
#####################################






clear
echo ""
echo ""
echo "###############################################
## <<<  ИДЁТ УСТАНОВКА ЯДРА И ЗАГРУЗЧИКА >>> ##
###############################################"; sleep 3
echo ""
echo ""
pacman -Syy
pacman -S --noconfirm linux-lts linux-lts-headers linux-firmware networkmanager wpa_supplicant grub grub-btrfs openssh os-prober plymouth
systemctl enable NetworkManager.service grub-btrfsd.service sshd.service
clear
grub-install --target=x86_64-efi --removable
sed -i "s/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/" /etc/default/grub
clear
sed -i "s/loglevel=3 quiet/quiet splash udev.log_priority=3/" /etc/default/grub
sed -i "s/udev.log_priority=3/resume=UUID=$(blkid -o value  /dev/sda3|head -n 1|tail -n 2) udev.log_priority=3/" /etc/default/grub
sed -i s/'#GRUB_BTRFS_SUBMENUNAME="Arch Linux snapshots"'/'GRUB_BTRFS_SUBMENUNAME="Arch Linux snapshots"'/g /etc/default/grub-btrfs/config
sed -i s/'#GRUB_BTRFS_TITLE_FORMAT=("date" "snapshot" "type" "description")'/'GRUB_BTRFS_TITLE_FORMAT=("description" "date")'/g /etc/default/grub-btrfs/config
sed -i 's/ProtectSystem=strict/ProtectSystem=full/' /usr/lib/systemd/system/mkinitcpio-generate-shutdown-ramfs.service
sed -i 's/filesystems/plymouth resume btrfs filesystems/' /etc/mkinitcpio.conf
sed -i 's/fsck/grub-btrfs-overlayfs/' /etc/mkinitcpio.conf
sed -i 's/ consolefont//' /etc/mkinitcpio.conf
clear
grub-mkconfig -o /boot/grub/grub.cfg
clear
mkinitcpio -P
clear
echo ""
echo ""
echo "##################################################
##    УСТАНОВКА БАЗОВОЙ СИСТЕМЫ ЗАВЕРШЕНА       ##
##         И ГОТОВА К ИСПОЛЬЗОВАНИЮ.            ##
##  ПРИ ЖЕЛАНИИ ВЫ МОЖЕТЕ ВЫЙТИ ИЗ УСТАНОВЩИКА, ##
##         ЛИБО ПРОДОЛЖИТЬ УСТАНОВКУ.           ##
##################################################"
echo ""
echo ""








#############################################
### УСТАНОВКА БАЗОВОЙ СИСТЕМЫ ЗАВЕРШЕНА #####
#############################################



#######################
## СИСТЕМНЫЕ УТИЛИТЫ ##
#######################






clear
echo ""
echo ""
echo "#############################################################
## <<<  НАЧИНАЕТСЯ УСТАНОВКА СИСТЕМНЫХ ПРОГРАММ И XORG >>> ##
#############################################################"; sleep 3
echo ""
echo ""
pacman -Syy
clear
# Services
pacman -S --noconfirm modemmanager
clear
pacman -S --noconfirm bluez bluez-utils
clear
pacman -S --noconfirm cups cups-pdf ghostscript gsfonts
clear
pacman -S --noconfirm cronie haveged
clear
pacman -S --noconfirm mlocate chrony
systemctl enable chrony-wait.service chronyd.service
clear
pacman -S --noconfirm cpupower sysfsutils wireless-regdb
clear
# XDG
pacman -S --noconfirm xdg-utils xdg-user-dirs
clear
systemctl enable ModemManager.service cups.service  cronie.service bluetooth.service haveged.service systemd-timesyncd
clear
# Generic
pacman -S --noconfirm vim wget usbutils lsof dmidecode dialog
clear
# Compression
pacman -S --noconfirm zip unzip unrar p7zip lzop lrzip
clear
# Шрифты
pacman -S --noconfirm ttf-dejavu ttf-liberation noto-fonts noto-fonts-cjk noto-fonts-emoji
clear
# Network Tools
pacman -S --noconfirm rsync traceroute bind-tools
clear
# File System
pacman -S --noconfirm dosfstools ntfs-3g btrfs-progs exfatprogs gptfdisk fuse2 fuse3 fuseiso
clear
# SAMBA
pacman -S --noconfirm samba gvfs gvfs-smb smbclient cifs-utils gvfs-afc gvfs-mtp gvfs-nfs gvfs-dnssd gvfs-goa gvfs-google gvfs-gphoto2 gvfs-onedrive gvfs-wsdd
# ЗВУК
# Wireplumber Pipewire
pacman -S --noconfirm wireplumber pipewire-alsa pipewire-jack pipewire-pulse pipewire-v4l2 pipewire-zeroconf gst-plugin-pipewire helvum
clear
# Alsa
pacman -S --noconfirm alsa-firmware alsa-plugins alsa-utils sof-firmware
clear
# GStreamer
pacman -S --noconfirm gst-libav gst-plugins-bad gst-plugins-base gst-plugins-ugly gst-plugin-pipewire gst-plugin-va gstreamer
clear
# MAN
pacman -S --noconfirm man-db most man-pages man-pages-ru yelp xorg-xman
clear
# Утилиты вывода системной информации
pacman -S --noconfirm hyfetch fastfetch
clear
# XORG
pacman -S --noconfirm xorg-server xorg-xinit xorg-xkill xorg-xclock
clear
echo ""
echo ""
echo "Видеокарты:" && lspci -nn | grep -i 'vga' ; echo "Драйверы:" && lsmod | grep -iE 'nvidia|amdgpu|i915'
echo ""
echo ""
echo "#####################################
## <<<  УСТАНОВКА XORG-DRIVERS >>> ##
#####################################"
echo ""
echo ""
pacman -S xorg-drivers
clear
echo ""
echo ""
echo "############################################################
## <<<  УСТАНОВКА СИСТЕМНЫХ ПРОГРАММ И XORG ЗАВЕРШЕНА >>> ##
############################################################"
echo ""
echo ""







######################################################
### УСТАНОВКА КОМПОНЕНТОВ ДЛЯ ВИРТУАЛЬНОЙ МАШИНЫ #####
######################################################



clear
pacman -S --noconfirm virtualbox-guest-utils open-vm-tools qemu-guest-agent
clear



########################################################
############### Установка графической оболочки #########
########################################################




###################
## Установка KDE ##
###################




clear
echo ""
echo ""
echo "##############################################
## <<<  НАЧИНАЕТСЯ УСТАНОВКА KDE PLASMA >>> ##
##############################################"; sleep 3
echo ""
echo ""
pacman -Syy
clear
# plasma
pacman -S --noconfirm bluedevil breeze breeze-gtk breeze-plymouth drkonqi kactivitymanagerd kde-cli-tools kde-gtk-config kdecoration kdeplasma-addons kgamma kglobalacceld kinfocenter kmenuedit kpipewire krdp kscreen kscreenlocker ksshaskpass ksystemstats kwallet-pam kwayland kwin kwrited layer-shell-qt libkscreen libksysguard libplasma milou ocean-sound-theme okular oxygen oxygen-sounds plasma5support plasma-activities plasma-activities-stats plasma-browser-integration plasma-desktop plasma-disks plasma-firewall plasma-integration plasma-nm plasma-pa plasma-sdk plasma-systemmonitor plasma-thunderbolt plasma-vault plasma-welcome plasma-workspace plasma-workspace-wallpapers plymouth-kcm polkit-kde-agent powerdevil print-manager qqc2-breeze-style sddm-kcm spectacle systemsettings wacomtablet xdg-desktop-portal-kde
clear
pacman -S --noconfirm sddm
systemctl enable sddm
clear
# kde-applications
pacman -S --noconfirm ark audex audiocd-kio dolphin dolphin-plugins dragon elisa falkon ffmpegthumbs filelight gwenview isoimagewriter k3b kalarm kalk kamera kate kbackup kcolorchooser kdeconnect kdegraphics-thumbnailers kdesdk-thumbnailers kdf kdialog kfind kget kgpg khelpcenter kio-admin kio-extras kio-gdrive kio-zeroconf kmag kmix kompare konqueror konsole kontact kontrast ksystemlog ktorrent kwalletmanager kweather lokalize partitionmanager signon-kwallet-extension skanlite skanpage svgpart sweeper yakuake zanshin
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
echo ""
echo ""
echo "#############################################
## <<<  УСТАНОВКА KDE PLASMA ЗАВЕРШЕНА >>> ##
#############################################"
echo ""
echo ""
exit




umount -R /mnt
poweroff



rm -r .ssh/







###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################





clear
# xinitrc
echo "export DESKTOP_SESSION=plasma" > ~/.xinitrc
echo "exec startplasma-x11" >> ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear





# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot





############################
## Установка Arch Trinity ##
############################




clear
echo ""
echo ""
echo "################################################
## <<<  НАЧИНАЕТСЯ УСТАНОВКА ARCH TRINITY >>> ##
################################################"; sleep 3
echo ""
echo ""
pacman -Syy
clear
# Xorg
pacman -S --noconfirm xorg
clear
echo "#" >> /etc/pacman.conf
echo "#" >> /etc/pacman.conf
echo "# Official Trinity ArchLinux repository" >> /etc/pacman.conf
echo "[trinity]" >> /etc/pacman.conf
echo "Server = https://mirror.ppa.trinitydesktop.org/trinity/archlinux/x86_64/" >> /etc/pacman.conf
pacman-key --recv-key  D6D6FAA25E9A3E4ECD9FBDBEC93AF1698685AD8B
pacman-key --lsign-key D6D6FAA25E9A3E4ECD9FBDBEC93AF1698685AD8B
clear
pacman -Sy
pacman -S --noconfirm tde-meta gdb blueman
systemctl enable tdm.service
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
echo ""
echo ""
echo "###############################################
## <<<  УСТАНОВКА ARCH TRINITY ЗАВЕРШЕНА >>> ##
###############################################"
echo ""
echo ""
exit



umount -R /mnt
poweroff



rm -r .ssh/





###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################



clear
# xinitrc
echo "exec /opt/trinity/bin/starttde" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear





# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot




#####################
## Установка XFCE4 ##
#####################




clear
echo ""
echo ""
echo "###################################
## <<<  ИДЁТ УСТАНОВКА XFCE4 >>> ##
###################################"; sleep 3
echo ""
echo ""
pacman -S --noconfirm xfce4
clear
pacman -S --noconfirm mousepad thunar-archive-plugin thunar-media-tags-plugin xfburn xfce4-artwork xfce4-battery-plugin xfce4-clipman-plugin xfce4-cpufreq-plugin xfce4-cpugraph-plugin xfce4-dict xfce4-diskperf-plugin xfce4-eyes-plugin xfce4-fsguard-plugin xfce4-genmon-plugin xfce4-mailwatch-plugin xfce4-mount-plugin xfce4-mpc-plugin xfce4-netload-plugin xfce4-notes-plugin xfce4-notifyd xfce4-places-plugin xfce4-pulseaudio-plugin xfce4-screensaver  xfce4-screenshooter xfce4-sensors-plugin xfce4-smartbookmark-plugin xfce4-systemload-plugin  xfce4-taskmanager xfce4-time-out-plugin xfce4-timer-plugin xfce4-verve-plugin xfce4-wavelan-plugin xfce4-weather-plugin xfce4-whiskermenu-plugin xfce4-xkb-plugin xdg-user-dirs
clear
pacman -S --noconfirm mugshot pavucontrol archlinux-xdg-menu xdg-desktop-portal-gtk menulibre network-manager-applet
update-menus
pacman -S --noconfirm lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings
clear
pacman -S --noconfirm blueman engrampa ffmpegthumbnailer libgsf udiskie evince
clear
pacman -S --noconfirm catfish galculator libopenraw mtpfs ntp numlockx perl-file-mimeinfo pidgin powertop unace xcursor-simpleandsoft xcursor-vanilla-dmz-aa gcolor3 xiccd
clear
systemctl enable lightdm.service
clear
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
echo ""
echo ""
echo "########################################
## <<<  УСТАНОВКА XFCE4 ЗАВЕРШЕНА >>> ##
########################################"
echo ""
echo ""
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################



clear
# xinitrc
echo "exec startxfce4" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear
## Флаги ##
mkdir -p ~/.local/share/xfce4/xkb/flags/
cd ~/.local/share/xfce4/xkb/flags/
wget https://upload.wikimedia.org/wikipedia/commons/5/53/Nuvola_USA_flag.svg
wget https://upload.wikimedia.org/wikipedia/commons/a/ac/Nuvola_Russian_flag.svg
mv -i Nuvola_USA_flag.svg us.svg
mv -i Nuvola_Russian_flag.svg ru.svg
cd
clear





# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot



#####################
## Установка Gnome ##
#####################





clear
echo ""
echo ""
echo "###################################
## <<<  ИДЁТ УСТАНОВКА GNOME >>> ##
###################################"; sleep 3
echo ""
echo ""
#  Gnome
pacman -S --noconfirm baobab decibels epiphany evince gnome-backgrounds gnome-calculator gnome-calendar gnome-characters gnome-clocks 	gnome-color-manager gnome-connections gnome-console gnome-contacts gnome-control-center gnome-disk-utility gnome-font-viewer gnome-keyring gnome-logs gnome-maps gnome-menus gnome-music gnome-remote-desktop gnome-session gnome-settings-daemon gnome-shell gnome-shell-extensions gnome-system-monitor gnome-text-editor gnome-tour gnome-user-docs gnome-user-share gnome-weather grilo-plugins gvfs 	gvfs-afc gvfs-dnssd gvfs-goa gvfs-google gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb gvfs-wsdd loupe malcontent nautilus orca rygel simple-scan 	snapshot sushi tecla totem xdg-desktop-portal-gnome xdg-user-dirs-gtk yelp gdm
clear
systemctl enable gdm
clear
#  Gnome-extra
pacman -S --noconfirm dconf-editor eog file-roller gnome-devel-docs gnome-multi-writer gnome-notes gnome-sound-recorder gnome-terminal gnome-tweaks seahorse sysprof
clear
pacman -S --noconfirm gnome-browser-connector gnome-firmware gnome-shell-extension-appindicator gnome-shell-extension-arc-menu gnome-shell-extension-dash-to-panel gnuchess power-profiles-daemon squashfs-tools
clear
pacman -S --noconfirm gthumb gtkmm3 qt5ct qt6ct system-config-printer deja-dup 
clear
pacman -S --noconfirm adw-gtk-theme gnome-themes-extra
clear
pacman -S --noconfirm ffmpegthumbnailer
clear
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
echo ""
echo ""
echo "########################################
## <<<  УСТАНОВКА GNOME ЗАВЕРШЕНА >>> ##
########################################"
echo ""
echo ""
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################




clear
# xinitrc
echo "export XDG_SESSION_TYPE=x11" > ~/.xinitrc
echo "export GDK_BACKEND=x11" >> ~/.xinitrc
echo "exec gnome-session" >> ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear







# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot






########################
## Установка Cinnamon ##
########################





clear
pacman -Syy
clear
pacman -S --noconfirm cinnamon cinnamon-translations blueman dconf-editor ffmpegthumbnailer gcolor3 gnome-disk-utility gnome-keyring gnome-online-accounts gnome-screenshot gnome-system-monitor gnome-terminal gnome-themes-extra mousetweaks onboard pavucontrol powertop system-config-printer  xreader xdg-desktop-portal-gnome evince
clear
pacman -S --noconfirm nemo-fileroller nemo-preview nemo-python nemo-share
clear
pacman -S --noconfirm kvantum
clear
pacman -S --noconfirm icon-naming-utils
clear
pacman -S --noconfirm baobab galculator netctl numlockx python-pyxdg qt5ct redshift squashfs-tools tree udiskie
clear
pacman -S --noconfirm lightdm lightdm-slick-greeter
clear
systemctl enable lightdm.service
sed -i s/'#greeter-session=example-gtk-gnome'/'greeter-session=lightdm-slick-greeter'/g /etc/lightdm/lightdm.conf
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################




yay -S bibata-cursor-theme mint-l-theme mint-themes xed bulky mintstick pix gg iso-flag-png




clear
# xinitrc
echo "exec cinnamon-session" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear







# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot



####################
## Установка Mate ##
####################





pacman -Syy
pacman -S --noconfirm mate mate-extra
pacman -S --noconfirm mate-themes
pacman -S --noconfirm plank
pacman -S --noconfirm lightdm lightdm-slick-greeter
systemctl enable lightdm.service
sed -i s/'#greeter-session=example-gtk-gnome'/'greeter-session=lightdm-slick-greeter'/g /etc/lightdm/lightdm.conf
systemctl enable lightdm.service
clear
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################





clear
# xinitrc
echo "exec mate-session" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear






# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot




####################
## Установка LXQT ##
####################



pacman -S --noconfirm lxqt lxqt-themes xscreensaver picom libstatgrab libsysstat breeze-icons kvantum-qt5 blueman featherpad
clear
pacman -S --noconfirm  kwin kwin-x11 discover bluedevil systemsettings plasma-sdk aurorae breeze breeze-gtk flatpak-kcm kde-gtk-config kpipewire kscreen kscreenlocker gnome-keyring milou plasma-desktop plasma-pa print-manager qqc2-breeze-style xdg-desktop-portal-kde
clear
pacman -S --noconfirm sddm sddm-kcm
clear
systemctl enable sddm.service
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################

yay --noconfirm -S nm-tray


clear
# xinitrc
echo "exec startlxqt" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear
# flags
mkdir -p /home/login/.local/share/flags
cd /home/login/.local/share/flags
wget https://upload.wikimedia.org/wikipedia/commons/5/53/Nuvola_USA_flag.svg
wget https://upload.wikimedia.org/wikipedia/commons/a/ac/Nuvola_Russian_flag.svg
mv -i Nuvola_USA_flag.svg us.svg
mv -i Nuvola_Russian_flag.svg ru.svg
cd
sed -i s/'layout\_flag_pattern\='/'layout\_flag_pattern\=\/home\/login\/.local\/share\/flags\/%1.svg'/g ~/.config/lxqt/panel.conf
clear






# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot



####################
## Установка LXDE ##
####################




pacman -Syy
clear
pacman -S --noconfirm lxde leafpad openbox pavucontrol alsa-utils xfce4-notifyd
clear
pacman -S --noconfirm xscreensaver picom libstatgrab libsysstat mugshot dunst
clear
pacman -S --noconfirm lxqt-archiver ffmpegthumbnailer
clear
pacman -S --noconfirm thunar-archive-plugin  thunar-media-tags-plugin thunar-shares-plugin ffmpegthumbnailer libgsf udiskie
update-menus
clear
pacman -S --noconfirm lightdm lightdm-slick-greeter
clear
pacman -S --noconfirm blueman lxqt-archiver ffmpegthumbnailer
clear
sed -i s/'#greeter-session=example-gtk-gnome'/'greeter-session=lightdm-slick-greeter'/g /etc/lightdm/lightdm.conf
sed -i s/'#display-setup-script='/'display-setup-script=xrandr --output Virtual-1 --mode 1920x1080'/g /etc/lightdm/lightdm.conf
systemctl enable lightdm.service
sed -i s/'#AutoEnable=true'/'AutoEnable=true'/g /etc/bluetooth/main.conf
clear
exit




umount -R /mnt
poweroff



rm -r .ssh/



###############################
## КОНФИГУРАЦИЯ ПОЛЬЗОВАТЕЛЯ ##
###############################



clear
# xinitrc
echo "exec startlxde" > ~/.xinitrc
sudo cp ~/.xinitrc /root/.xinitrc
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user --force enable wireplumber.service
clear







# zsh
sudo pacman -S --noconfirm zsh git curl
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
clear



# ohmyzsh-congig
chsh -s $(which zsh)
sed -i s/'ZSH_THEME=\"robbyrussell\"'/'ZSH_THEME=\"agnoster\"'/g ~/.zshrc
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
mv zsh-syntax-highlighting ~/.oh-my-zsh/plugins
echo "source ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions
mv zsh-autosuggestions ~/.oh-my-zsh/custom/plugins
sed -i s/'plugins=(git)'/'plugins=(git archlinux extract themes zsh-navigation-tools zsh-autosuggestions)'/g ~/.zshrc
echo "hyfetch" >> ~/.zshrc
sudo reboot


yay -S --noconfirm nm-tray arc-gtk-theme exaile

############################################################
################# FINISH ###################################
############################################################
